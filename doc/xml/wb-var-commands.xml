<section id="wb-var-commands">
  <title>Manage variables with &wb-productname;</title>

	<important><para>
    All &wb-productname; specific command can <emphasis role="bold">only</emphasis> be used from within &wb-productname;
  </para></important>

    <para>
      More details about using variables can be found in the chapter <xref linkend="using-variables"/>.
    </para>

  <section id="wb-define-var">
    <title>Define a script variable - WbVarDef</title>

    <para>
      This defines an internal variable which is used for variable substitution during
      SQL execution.
    </para>
    <para>
      There are two possibilities to define a variable.
    </para>
    <para>
       The short syntax is: <literal>WbVarDef variable=value</literal>
    </para>
    <para>
      The long syntax allows to define variables in a different way:
    </para>
    <informaltable frame="all">
      <tgroup cols="2" align="left">
        <colspec colname="c1" colwidth="4cm" />
        <colspec colname="c2" />
        <thead>
          <row>
            <entry>Parameter</entry>
            <entry>Description</entry>
          </row>
        </thead>

        <tbody valign="top">
          <row>
            <entry id="wbvardef-varname">-variable</entry>
            <entry>The name of the variable to be defined.</entry>
          </row>

          <row>
            <entry id="wbvardef-varvalue">-value</entry>
            <entry>The value of the variable.</entry>
          </row>

          <row>
            <entry id="wbvardef-file">-file</entry>
            <entry>
              Read the variable definitions from the specified file.
            </entry>
          </row>

          <row>
            <entry id="wbvardef-contentfile">-contentFile</entry>
            <entry>
              Read the contents of the variable from a the specified file.
            </entry>
          </row>

          <row>
            <entry id="wbvardef-content-encoding">-encoding</entry>
            <entry>
              The encoding of the file specified with <literal>-contentFile</literal>.
            </entry>
          </row>

          <row>
            <entry id="wbvardef-query">-query</entry>
            <entry>
              Define a SQL query to be used as the source for the variable(s).
            </entry>
          </row>

          <row>
            <entry id="wbvardef-content-replace">-replaceVars</entry>
            <entry>
              <para>Valid values are: <literal>true</literal>, <literal>false</literal></para>
              <para>
                If the variable content is defined through <literal>-contentFile</literal>, this parameter
                controls if variable references in the the content should be replaced.
              </para>
              <para>
                The default for this parameter is: <literal>true</literal>.
              </para>
            </entry>
          </row>

          <row>
            <entry id="wbvardef-cleanup">-cleanupValue</entry>
            <entry>
              <para>Valid values are: <literal>true</literal>, <literal>false</literal></para>
              <para>
                If this is set to true, the value is "cleaned" up such that newlines (linefeeds)
                and SQL style comments are removed.
              </para>
              <para>
                The default for this parameter is: <literal>false</literal>.
              </para>
            </entry>
          </row>

          <row>
            <entry id="wbvardef-remove">-removeUndefined</entry>
            <entry>
              <para>Valid values are: <literal>true</literal>, <literal>false</literal></para>
              <para>
                If this is set to true, any reference to non-existing variables inside the value to be defined
                through <literal>-value</literal>, <literal>-query</literal> or <literal>-contentFile</literal>) is removed.
              </para>
              <para>
                The default for this parameter is: <literal>false</literal>.
              </para>
            </entry>
          </row>

          <row>
            <entry id="wbvardef-null">-nullHandling</entry>
            <para>Valid values are: <literal>ignore</literal>, <literal>remove</literal>, <literal>empty</literal></para>
            <entry>
              Define how NULL values returned from a SQL query should be handled.
              <simplelist>
                <member><literal>empty</literal> - if the value from the query is NULL, the variable be set to an empty string.</member>
                <member>
                  <literal>ignore</literal> - the value is ignored. An existing variable will not be changed. If the variable
                  does not exist, it will not be created.
                </member>
                <member><literal>remove</literal> - if the value from the query is NULL, the variable will be removed.</member>
              </simplelist>
            </entry>
          </row>

          <row>
            <entry id="wbvardef-lookup-values">-values</entry>
            <entry>
              Define a comma separated list of values that are used in the dialog that is shown when
              prompting for variable values.
            </entry>
          </row>
          <row>
            <entry id="wbvardef-silent">-silent</entry>
            <entry>
              If the option <literal>-silent</literal> is specified, no feedback about the variable definition
              will be shown.
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>
      More details and examples can be found in the chapter: <xref linkend="using-variables"/>
    </para>

  </section>

  <section id="command-vardelete">
    <title>Delete a script variable - WbVarDelete</title>

    <para>
      This removes a variable.
    </para>

    <para>
      The syntax is <literal>WbVarDelete variable</literal>
    </para>
    <para>
      <literal>variable</literal> is the name of the variable to be removed.
      The name can contain wildcards. <literal>WbVarDelete *</literal> will remove all defined variables.
      <literal>WbVarDelete id*</literal> will remove all variables starting with <literal>id</literal>.
    </para>

  </section>

  <section id="command-varlist">
    <title>Show defined script variables - WbVarList</title>

    <para>
      This shows all defined variables when invoked without parameters. There are two ways to filter the result:
    </para>
    <para>
      Supplying a simple wildcard value, e.g. <literal>WbVarList foo*</literal> to display variables where the name starts with <literal>foo</literal>
    </para>
    <para>
      Using the parameter <literal>-match</literal> to define a regular expression only show variables where the name matches the regular expression,
      e.g. <literal>WbVarList -match="^(foo|bar).*"</literal> to list all variables where the name starts with <literal>foo</literal> or <literal>bar</literal>.
    </para>
  </section>

</section>